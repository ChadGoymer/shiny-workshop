.libPaths()
install.packages("devtools")
.libPaths()
installed.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("shiny")
install.packages("dplyr")
install.packages("readr")
install.packages("ggplot2")
install.packages("tidyr")
install.packages("testthat")
install.packages("lubridate")
library(httr)
GET("http://api.wunderground.com/api/Your_Key/conditions/q/CA/San_Francisco.json")
GET("http://api.wunderground.com/api/b46469619813af9c/conditions/q/CA/San_Francisco.json")
library("jsonlite")
test-fromJSON(GET("http://api.wunderground.com/api/b46469619813af9c/conditions/q/CA/San_Francisco.json"), simplifyDataFrame = FALSE)
test <- fromJSON(GET("http://api.wunderground.com/api/b46469619813af9c/conditions/q/CA/San_Francisco.json"), simplifyDataFrame = FALSE)
test <- fromJSON("http://api.wunderground.com/api/b46469619813af9c/conditions/q/CA/San_Francisco.json", simplifyDataFrame = FALSE)
test
R.version
library(jsonlite)
fromJSON('http://api.wunderground.com/api/b46469619813af9c/history_20150701/q/UK/London.json')
get_weather <- function(date, location) {
url <- paste('http://api.wunderground.com/api/', API_KEY, '/history_', date, '/q/', location)
fromJSON(url)
}
get_weather <- function(date, location) {
url <- paste('http://api.wunderground.com/api/', API_KEY, '/history_', date, '/q/', location)
fromJSON(url)
}
response = get_weather(date, location)
API_KEY = 'b46469619813af9c'
response = get_weather(date, location)
location = "UK/London"
date = "20150701"
response = get_weather(date, location)
'http://api.wunderground.com/api/', API_KEY, '/history_', date, '/q/', location
paste0('http://api.wunderground.com/api/', API_KEY, '/history_', date, '/q/', location)
url <- paste0('http://api.wunderground.com/api/', API_KEY, '/history_', date, '/q/', location, '.json')
url
get_weather <- function(date, location) {
url <- paste0('http://api.wunderground.com/api/', API_KEY, '/history_', date, '/q/', location, '.json')
fromJSON(url)
}
response = get_weather(date, location)
response
rstudio::versionInfo()
install.packages("reportsWS", repos = c("http://cran.rstudio.com", "http://training.rstudio.com"))
rstudio::versionInfo()
setwd("R/projects/shiny-workshop")
library(reportsWS)
exercise(2)
exercise(19)
solution(19)
install.packages(DT)
install.packages("DT")
install.packages("kable")
library(rmarkdown)
tools:::package.dependencies("rmarkdown")
tools::package.dependencies("rmarkdown")
tools::dependsOnPkgs("rmarkdown")
library(shiny)
ui <- fluidPage()
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
exercise(20)
library(shiny)
ui <- fluidPage(
# *Input() functions
# *Output() functions
# layout functions
)
server <- function(input, output) {
# render*() functions (save results to ouput$)
# observeEvent(), reactive(), eventReactive() functions
}
shinyApp(server = server, ui = ui)
library(shiny)
source('~/R/projects/shiny-workshop/exercise-20.R', echo=TRUE)
source('~/R/projects/shiny-workshop/exercise-20.R', echo=TRUE)
source('~/R/projects/shiny-workshop/exercise-20.R', echo=TRUE)
source('~/R/projects/shiny-workshop/exercise-20.R', echo=TRUE)
source('~/R/projects/shiny-workshop/exercise-20.R', echo=TRUE)
ui <- fluidPage(
# *Input() functions
sliderInput(inputId = "num", label = "Choose a number", min = 1, max = 100, value = 25)
# *Output() functions
# layout functions
)
server <- function(input, output) {
# render*() functions (save results to ouput$)
# observeEvent(), reactive(), eventReactive() functions
}
shinyApp(server = server, ui = ui)
